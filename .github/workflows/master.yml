name: Merge with master

on:
  push:
    branches:
      - master

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-linux-android
          - arm-unknown-linux-gnueabi
          - armv7-linux-androideabi
          - armv7-unknown-linux-gnueabihf
          #- armv5te-unknown-linux-gnueabi  # ld doesn't do rcgu
          - i686-linux-android
          - i686-unknown-linux-gnu
          #- mips-unknown-linux-gnu         # cannot build ring
          #- powerpc64le-unknown-linux-gnu  # cannot build ring
          #- riscv64gc-unknown-linux-gnu    # ld doesn't do rcgu
          #- s390x-unknown-linux-gnu        # cannot build ring
          #- wasm32-unknown-emscripten      # no epoll
          #- x86_64-apple-darwin            # ld doesn't do rcgu
          - x86_64-linux-android
          - x86_64-pc-windows-gnu
          # - x86_64-unknown-freebsd        # = note: /usr/bin/ld: cannot find -lexecinfo
        toolchain:
          - stable
        has_native_tls: [false]
        use_cross: [true]
        include:
          - target: x86_64-unknown-linux-gnu
            use_cross: false
            toolchain: stable
            has_native_tls: true

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: Build all features
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --all-features

      - name: Test all features
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --all-features

      - name: Build no default features
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features

      - name: Test no default features
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features

      - name: Build async only
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features async

      - name: Test async only
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features async

      - name: Build rustls
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_rustls

      - name: Test rustls
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_rustls

      - name: Build native_tls
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_native_tls

      - name: Test native_tls
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_native_tls

  macos:
    name: MacOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin # only darwin for now. ios requires a simulator
        toolchain:
          - stable

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: Build all features
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target ${{ matrix.target }} --all-features

      - name: Test all features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --target ${{ matrix.target }} --all-features

      - name: Build no default features
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features

      - name: Test no default features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features

      - name: Build async only
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features async

      - name: Test async only
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features async

      - name: Build rustls
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_rustls

      - name: Test rustls
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_rustls

      - name: Build native_tls
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_native_tls

      - name: Test native_tls
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_native_tls

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          # - aarch64-pc-windows-msvc  # wrong platform configuration (pointer size is wrong)
          - i686-pc-windows-msvc
          - x86_64-pc-windows-msvc
        toolchain:
          - stable
        has_native_tls: [true]
        use_cross: [false]

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: Build all features
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --all-features

      - name: Test all features
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --all-features

      - name: Build no default features
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features

      - name: Test no default features
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features

      - name: Build async
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features async

      - name: Test async
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features async

      - name: Build rustls
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_rustls

      - name: Test rustls
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_rustls

      - name: Build native_tls
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_native_tls

      - name: Test native_tls
        uses: actions-rs/cargo@v1
        if: ${{ matrix.has_native_tls }}
        with:
          use-cross: ${{ matrix.use_cross }}
          command: test
          args: --verbose --target ${{ matrix.target }} --no-default-features --features tokio_native_tls
